{"version":3,"sources":["Game.js"],"names":["Bird","require","Background","Constant","Storage","Game","cc","Class","extends","Component","properties","pipeMaxOffsetY","pipeMinGap","pipeMaxGap","pipeSpawnInterval","pipeSpawnOffsetX","gameReflashTime","scoreScaleDuration","gameMenu","default","type","Node","bird","pipesNode","pipePrefabs","Prefab","background","gameOverText","Label","scoreText","highScoreText","endNode","onLoad","setInputControl","pipes","size","winSize","groundBox","groundNode","getBoundingBox","groundTop","y","height","isGameOver","curScore","getHighScore","string","HIGHSCORE_TXT","self","eventManager","addListener","event","EventListener","TOUCH_ONE_BY_ONE","onTouchBegan","_onTouchBegan","bind","node","touch","onJump","onStartGame","active","onStartDrop","schedule","spawnPipes","gameUpdate","GROUND_MOVE_INTERVAL","pipeUp","instantiate","PIPE_UP","getComponent","init","pipeHeight","spriteFrame","getRect","x","width","Math","floor","random","pipeDown","PIPE_DOWN","pipeGap","addChild","push","i","length","curPipeNode","GROUND_VX","birdBox","pipeBox","Intersection","rectRect","onGameOver","curPipe","isPassed","addScore","PIPE_SPAWN_OFFSET_X","splice","removeChild","action1","scaleTo","action2","action3","runAction","sequence","setHighScore","GAMEOVER_TXT","unscheduleAllCallbacks","director","loadScene","showEnd"],"mappings":"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","file":"Game.js","sourceRoot":"..\\..\\..\\..\\assets\\Scripts","sourcesContent":["const Bird = require('Bird');\r\nconst Background = require('Background');\r\nconst Constant = require('Constant'); \r\n\r\nvar Storage = require('Storage');\r\n\r\nvar Game = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // 管道纵向最大偏移值\r\n        pipeMaxOffsetY: 150,\r\n        // 上下管道间最小间隙\r\n        pipeMinGap: 80,\r\n        // 上下管道间最大间隙\r\n        pipeMaxGap: 150,\r\n        // 管道生成时间间隔\r\n        pipeSpawnInterval: 4.5,\r\n        // 管道生成时，屏幕外横向偏移位置\r\n        pipeSpawnOffsetX: 30,\r\n        // 重新刷新时间\r\n        gameReflashTime: 5,\r\n        // 形变动画播放间隔\r\n        scoreScaleDuration: 0.2,\r\n        // 游戏菜单节点\r\n        gameMenu: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // 小鸟对象\r\n        bird: {\r\n            default: null,\r\n            type: Bird\r\n        },\r\n        // 管道创建节点\r\n        pipesNode: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        // 管道预制数组\r\n        pipePrefabs: {\r\n            default: [],\r\n            type: [cc.Prefab]\r\n        },\r\n        // 地板对象\r\n        background: {\r\n            default: null,\r\n            type: Background\r\n        },\r\n        // 游戏失败文字标签\r\n        gameOverText: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        // 当前分数标签\r\n        scoreText: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        // 最高分标签\r\n        highScoreText: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        endNode: {\r\n            default: null,\r\n            type: cc.Node\r\n        }\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        // 初始化触摸事件\r\n        this.setInputControl();\r\n        // 初始化管道数组\r\n        this.pipes = [];\r\n        // 获取屏幕尺寸\r\n        this.size = cc.winSize;\r\n        // 获取地板的包围盒\r\n        var groundBox = this.background.groundNode[0].getBoundingBox();\r\n        // 获取地板顶部的纵坐标\r\n        this.groundTop = groundBox.y + groundBox.height/2;\r\n        // 初始化游戏失败标志位\r\n        this.isGameOver = false;\r\n        // 初始化当前分数\r\n        this.curScore = 0;\r\n        // 开始游戏界面，如有历史最高分则显示该成绩\r\n        if ( Storage.getHighScore() > 0 ) {\r\n            this.highScoreText.string = Constant.HIGHSCORE_TXT + Storage.getHighScore();\r\n        }\r\n    },\r\n\r\n    setInputControl: function() {\r\n        var self = this;\r\n        cc.eventManager.addListener({\r\n            event: cc.EventListener.TOUCH_ONE_BY_ONE,\r\n            onTouchBegan: self._onTouchBegan.bind(self)\r\n        }, self.node);\r\n    },\r\n    \r\n    _onTouchBegan: function( touch, event ) {\r\n        if ( this.isGameOver === true )\r\n            return;\r\n        this.bird.onJump();\r\n    },    \r\n    \r\n    onStartGame: function () {\r\n        // 关闭菜单节点显示\r\n        this.gameMenu.active = false;\r\n        // 小鸟开始下落\r\n        this.bird.onStartDrop();\r\n        // 从0开始显示分数\r\n        this.scoreText.string = \"\" + this.curScore;\r\n        // 启动管道生成定时器\r\n        this.schedule(this.spawnPipes, this.pipeSpawnInterval);\r\n        // 启动游戏逻辑更新定时器\r\n        this.schedule(this.gameUpdate, Constant.GROUND_MOVE_INTERVAL);\r\n    },\r\n\r\n    spawnPipes: function() {\r\n        // 从管道预制（上端），生成管道实例\r\n        var pipeUp = cc.instantiate(this.pipePrefabs[Constant.PIPE_UP]);\r\n        // 定义为上端类型\r\n        pipeUp.getComponent('Pipe').init(Constant.PIPE_UP);\r\n        // 获取管道的高度（上端与上端的相同）\r\n        var pipeHeight = pipeUp.getComponent('cc.Sprite').spriteFrame.getRect().height;\r\n        // 设置上端管道的横向起始位置（屏幕右端另加一定偏移）\r\n        pipeUp.x = this.size.width / 2 + this.pipeSpawnOffsetX;\r\n        // 设置上端管道的纵向起始位置（随机取偏移量）\r\n        pipeUp.y = Math.floor(Math.random() * this.pipeMaxOffsetY) + pipeHeight/2;\r\n        // 下端生成逻辑基本与上端相同\r\n        var pipeDown = cc.instantiate(this.pipePrefabs[Constant.PIPE_DOWN]);\r\n        pipeDown.getComponent('Pipe').init(Constant.PIPE_DOWN);\r\n        pipeDown.x = this.size.width / 2 + this.pipeSpawnOffsetX;\r\n        // 随机生成上端与下端管道之间的间隙值（pipeMinGap与pipeMaxGap之间）\r\n        var pipeGap = Math.floor(Math.random() * (this.pipeMaxGap - this.pipeMinGap)) + this.pipeMinGap;\r\n        pipeDown.y = pipeUp.y - pipeGap - pipeHeight;\r\n        // 添加管道到pipes节点上\r\n        this.pipesNode.addChild(pipeUp);\r\n        this.pipesNode.addChild(pipeDown);\r\n        // 添加管道到管道数组中\r\n        this.pipes.push(pipeUp);\r\n        this.pipes.push(pipeDown);\r\n    },\r\n\r\n    gameUpdate: function() {\r\n        for ( var i = 0; i < this.pipes.length; i ++ ) {\r\n            // 获取当前管道对象节点\r\n            var curPipeNode = this.pipes[i];\r\n            // 对管道进行移动操作\r\n            curPipeNode.x += Constant.GROUND_VX;\r\n            \r\n            // 获取小鸟的包围盒\r\n            var birdBox = this.bird.node.getBoundingBox();\r\n            // 获取当前管道的包围盒\r\n            var pipeBox = curPipeNode.getBoundingBox();\r\n            // var birdRect = new cc.Rect(birdBox.x - birdBox.width / 2, birdBox.y - birdBox.height / 2,\r\n            //     birdBox.width, birdBox.height);\r\n            // var pipeRect = new cc.Rect(pipeBox.x - pipeBox.width / 2, pipeBox.y - pipeBox.height / 2,\r\n            //     pipeBox.width, pipeBox.height);\r\n            // 根据两个矩形范围判断是否相交\r\n            if (cc.Intersection.rectRect(birdBox, pipeBox)) {\r\n                this.onGameOver();\r\n                return;\r\n            }\r\n            \r\n            // 获取当前管道对象\r\n            var curPipe = curPipeNode.getComponent('Pipe');\r\n            // 判断小鸟是否顺利通过管道，是则加分\r\n            if ( curPipeNode.x < this.bird.node.x && curPipe.isPassed === false \r\n                && curPipe.type === Constant.PIPE_UP) {\r\n                curPipe.isPassed = true;\r\n                this.addScore();\r\n            }\r\n            \r\n            // 超出屏幕范围的管道，从数组中移除，并从节点上删除\r\n            if ( curPipeNode.x < -(this.size.width/2 + Constant.PIPE_SPAWN_OFFSET_X)) {\r\n                this.pipes.splice(i, 1);\r\n                this.pipesNode.removeChild(curPipeNode, true);\r\n            } \r\n        }\r\n        \r\n        // 小鸟触地，则死亡\r\n        if (this.bird.node.y < this.groundTop ) {\r\n            this.onGameOver();\r\n        }\r\n    },\r\n    \r\n    addScore: function() {\r\n        // 加分\r\n        this.curScore ++;\r\n        // 显示当前分数\r\n        this.scoreText.string = \"\" + this.curScore;\r\n        var action1 = cc.scaleTo(this.scoreScaleDuration, 1.1, 0.6);\r\n        var action2 = cc.scaleTo(this.scoreScaleDuration, 0.8, 1.2);\r\n        var action3 = cc.scaleTo(this.scoreScaleDuration, 1, 1);\r\n        // 播放形变动画\r\n        this.scoreText.node.runAction(cc.sequence(action1, action2, action3));\r\n    },\r\n    \r\n    onGameOver: function() {\r\n        // 设置游戏失败标志位\r\n        this.isGameOver = true;\r\n        // 游戏失败，如超过最高分则成绩\r\n        if ( this.curScore > Storage.getHighScore() ) {\r\n            Storage.setHighScore(this.curScore);\r\n        }\r\n        // 死亡时，显示“Game Over”\r\n        this.gameOverText.string = Constant.GAMEOVER_TXT;\r\n        // 关闭所有定时器\r\n        this.bird.unscheduleAllCallbacks();\r\n        this.background.unscheduleAllCallbacks();\r\n        this.unscheduleAllCallbacks();\r\n        // 一定时间后，重新刷新游戏到开始状态\r\n        this.schedule(function() {\r\n            cc.director.loadScene('game');\r\n        }, this.gameReflashTime);\r\n    },\r\n\r\n    showEnd: function () {\r\n        if(this.endNode.active == false){\r\n            this.endNode.active = true;\r\n        } else {\r\n            this.endNode.active = false;\r\n        }\r\n    }\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"]}